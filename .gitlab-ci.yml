stages:
  - build
  - test
  - gitLab_pages
  - docker
  - scan

maven-build:
  image: 'maven:3.8.5-openjdk-11-slim'
  stage: build
  script: 
    - cd bezkoder-app
    - mvn clean package -B
  artifacts:
    paths:
      - bezkoder-app/target/*.jar
    expire_in: 1 hour 

unit_test:
  stage: test
  image: 'maven:3.8.5-openjdk-11-slim'
  script:
    - cd bezkoder-app
    - mvn test -Dtest=SpringBootDataJpaApplicationUnitTest

integration_test:
  stage: test
  image: 'maven:3.8.5-openjdk-11-slim'
  script:
    - cd bezkoder-app
    - mvn test -Dtest=SpringBootDataJpaApplicationIntegrationTest

dependency_scanning:
  stage: test
  image: 'maven:3.8.5-openjdk-11-slim'
  script:
    - cd bezkoder-app
    # - mvn verify
    - mvn org.owasp:dependency-check-maven:check -DskipIntegrationTests -DskipUnitTests

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2

image:
  name: docker/compose:latest
services:
  - name: docker:dind
    alias: docker

smoke test:
  stage: test
  before_script:
    - apk --no-cache add curl
    - COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
    - docker-compose up -d 
  script:
    - sleep 30
    - curl http://docker:8080/actuator/health | grep "UP"
  after_script:
    - docker-compose rm -fs


code_coverage:
  stage: test
  image: 'maven:3.8.5-openjdk-11-slim'
  script:
    - cd bezkoder-app
    - mvn verify
    - cat target/site/jacoco-ut/index.html | grep -o '<tfoot>.*</tfoot>'
  artifacts:
    expose_as: 'code coverage'
    paths:
      - bezkoder-app/target/surefire-reports/
      - bezkoder-app/target/site/jacoco-ut/index.html
    reports:
      junit:
        - bezkoder-app/target/surefire-reports/TEST-*.xml

publish_code_coverage:
  image: 'maven:3.8.5-openjdk-11-slim'
  stage: gitLab_pages
  dependencies:
    - code_coverage
  script:
    - ls -al
    - mv bezkoder-app/target/site/jacoco-ut/ public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master


services:
  - name: 'docker:dind'
    entrypoint:
      - env
      - '-u'
      - DOCKER_HOST
    command:
      - dockerd-entrypoint.sh

build_and_push:
  stage: docker
  variables:
    DOCKER_HOST: 'tcp://docker:2375/'
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  image: carlallen/docker:buildx
  before_script:
    - export DOCKER_BUILDKIT=1
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD docker.io
    - export DOCKER_CLI_EXPERIMENTAL=enabled
    - docker buildx create --driver=docker-container --name=buildkit-builder --use
    - docker buildx inspect --bootstrap   
  script:
    - cd bezkoder-app
    - docker buildx build --push --platform linux/amd64,linux/arm64 -t $REGISTRY/container_solutions_task:$CI_PIPELINE_IID .   
  parallel:
    matrix:
      - REGISTRY: [registry.gitlab.com/zakariaa_sadek, docker.io/zakariaasadek]

container_scanning:
  image: 'docker:stable'
  stage: scan
  before_script:
    - apk add --no-cache git
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - >-
      docker pull
      registry.gitlab.com/zakariaa_sadek/container_solutions_task:$CI_PIPELINE_IID
    - >-
      wget
      https://github.com/aquasecurity/trivy/releases/download/v0.24.2/trivy_0.24.2_Linux-64bit.tar.gz
    - tar zxvf trivy_0.24.2_Linux-64bit.tar.gz
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - >-
      ./trivy image --severity HIGH,CRITICAL
      registry.gitlab.com/zakariaa_sadek/container_solutions_task:$CI_PIPELINE_IID
  allow_failure: false