name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.5-openjdk-11-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build with Maven
        run: |
          cd bezkoder-app
          mvn clean package -B
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bezkoder-app
          path: bezkoder-app/target/*.jar
          retention-days: 1

  unit_test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.5-openjdk-11-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unit tests
        run: |
          cd bezkoder-app
          mvn test -Dtest=SpringBootDataJpaApplicationUnitTest

  integration_test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.5-openjdk-11-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run integration tests
        run: |
          cd bezkoder-app
          mvn test -Dtest=SpringBootDataJpaApplicationIntegrationTest

  dependency_scanning:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.5-openjdk-11-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run dependency check
        run: |
          cd bezkoder-app
          mvn org.owasp:dependency-check-maven:check -DskipIntegrationTests -DskipUnitTests

  smoke_test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        run: |
          docker buildx create --driver docker-container --name buildkit-builder --use
          docker buildx inspect --bootstrap
      - name: Login to Docker Hub
        run: echo '${{ secrets.DOCKER_HUB_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_HUB_USER }}' --password-stdin
      - name: Build and start containers
        run: |
          COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build
          docker-compose up -d
      - name: Run smoke tests
        run: |
          sleep 30
          curl http://localhost:8080/actuator/health | grep "UP"
      - name: Tear down Docker containers
        run: docker-compose down

  code_coverage:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.5-openjdk-11-slim
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run code coverage
        run: |
          cd bezkoder-app
          mvn verify
          total_coverage=$(grep -oP 'Total.*?\K([0-9]{1,3})%' target/jacoco-ut/index.html)
          echo "Total coverage: $total_coverage"
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: |
            bezkoder-app/target/surefire-reports/
            bezkoder-app/target/site/jacoco-ut/index.html

  publish_code_coverage:
    runs-on: ubuntu-latest
    needs: code_coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: code-coverage
          path: bezkoder-app/target/site/jacoco-ut/index.html
      - name: Publish code coverage
        run: |
          mkdir -p public
          ls -lart bezkoder-app/target/site/jacoco-ut/ | grep index.html
      - name: Publish code coverage
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'bezkoder-app/target/site/jacoco-ut/index.html'
          badge: true
          format: 'markdown'
          output: 'both'
