pipeline {
  environment {
    CI_REGISTRY="docker.io"
    CI_TOKEN="46dc2ca4-df93-462c-a1e0-00010a40a68f"
  }
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: maven
            image: maven:3.8.1-adoptopenjdk-11
            command:
            - cat
            tty: true
          - name: builder
            image: gcr.io/kaniko-project/executor:debug
            imagePullPolicy: IfNotPresent
            command:
            - /busybox/cat
            tty: true
            volumeMounts:
              - name: docker-config
                mountPath: /kaniko/.docker
          volumes:
            - name: docker-config
              configMap:
                name: docker-config
        '''
    }
  }
  stages {
     
    // stage('maven-build') {
    //   steps {
    //     container('maven') {
    //       sh 'mvn clean package -B -f bezkoder-app/pom.xml'
    //     }
    //   }
    // }
    // stage('unit_test') {
    //   steps {
    //     container('maven') {
    //       sh 'mvn test -Dtest=SpringBootDataJpaApplicationUnitTest -f bezkoder-app/pom.xml'
    //     }
    //   }
    // }
    // stage('integration_test') {
    //   steps {
    //     container('maven') {
    //       sh 'mvn test -Dtest=SpringBootDataJpaApplicationIntegrationTest -f bezkoder-app/pom.xml'
    //     }
    //   }
    // }
    // stage('dependency_scanning') {
    //   steps {
    //     container('maven') {
    //       sh 'mvn org.owasp:dependency-check-maven:check -DskipIntegrationTests -DskipUnitTests -f bezkoder-app/pom.xml'
    //     }
    //   }
    // } 
     
    stage('build_and_push') {
      steps {
        container('builder') {
          sh 'cat /kaniko/.docker/config.json'
          sh 'export HTTPS_PROXY=http://www-proxy-hqdc.us.oracle.com:80/'
          sh 'export http_proxy=http://www-proxy-hqdc.us.oracle.com:80/'
          sh "/kaniko/executor --verbosity debug --dockerfile bezkoder-app/Dockerfile --context bezkoder-app/ --destination=docker.io/zakariaasadek/container_solutions_task:zakariaa"
          
        }
      }
    }

    // stage('build_and_push') {
    //   agent any
    //   steps {
    //     sh 'echo $dockerhub_PSW | docker login -u $dockerhub_USR --password-stdin'
    //     sh 'docker build -t zakariaasadek/container_solutions_task:zakariaa bezkoder-app/. '
    //     sh 'docker push zakariaasadek/container_solutions_task:zakariaa'
    //   }
    // }
  }
}

